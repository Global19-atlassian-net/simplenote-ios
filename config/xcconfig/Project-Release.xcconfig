//
// Project-Release.xcconfig
//
// Generated by BuildSettingExtractor on 4/11/20
// https://github.com/dempseyatgithub/BuildSettingExtractor
//

#include "Project-Shared.xcconfig"

// Strip Debug Symbols During Copy
// 
// Specifies whether binary files that are copied during the build, such as in a Copy
// Bundle Resources or Copy Files build phase, should be stripped of debugging symbols.
// It does not cause the linked product of a target to be strippedâ€”use
// `STRIP_INSTALLED_PRODUCT` for that.

COPY_PHASE_STRIP = YES

// Enable Foundation Assertions
// 
// Controls whether assertion logic provided by `NSAssert` is included in the
// preprocessed source code or is elided during preprocessing. Disabling assertions can
// improve code performance.

ENABLE_NS_ASSERTIONS = NO

// Preprocessor Macros
// 
// Space-separated list of preprocessor macros of the form `foo` or `foo=bar`.

GCC_PREPROCESSOR_DEFINITIONS = $(inherited) SDK_VERSION_IOS13=$(SDK_VERSION_IOS13) SDK_VERSION_MAJOR=$(SDK_VERSION_MAJOR)

// Swift Compilation Mode
// 
// This setting controls the way the Swift files in a module are rebuilt.
// 
// * Incremental: Only rebuild the Swift source files in the module that are out of
// date, running multiple compiler processes as needed.
// * Whole Module: Always rebuild all Swift source files in the module, in a single
// compiler process.

SWIFT_COMPILATION_MODE = wholemodule

// Swift Optimization Level
// 
// * None: Compile without any optimization. [-Onone]
// * Optimize for Speed: [-O]
// * Optimize for Size: [-Osize]
// * Whole Module Optimization: [-O -whole-module-optimization]

SWIFT_OPTIMIZATION_LEVEL = -O

// Validate Built Product
// 
// If enabled, perform validation checks on the product as part of the build process.

VALIDATE_PRODUCT = YES