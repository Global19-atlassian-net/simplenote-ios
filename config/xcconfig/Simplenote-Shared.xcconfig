//
// Simplenote-Shared.xcconfig
//
// Generated by BuildSettingExtractor on 4/11/20
// https://github.com/dempseyatgithub/BuildSettingExtractor
//

// Always Embed Swift Standard Libraries
//
// Always embed the Swift standard libraries in the target's products, even if the target
// does not contain any Swift code.  For example, this should be enabled if the target is
// embedding other products which contain Swift, or if it is a test target which does not
// contain Swift but which is testing a product which does.  This setting only applies to
// wrapped products, not to standalone binary products.

ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = $(inherited)

// Asset Catalog Launch Image Set Name
//
// Name of an asset catalog launch image set whose contents will be merged into the
// `Info.plist`.

ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME =

// Enable Modules (C and Objective-C)
//
// Enables the use of modules for system APIs. System headers are imported as semantic
// modules instead of raw headers. This can result in faster builds and project indexing.

CLANG_ENABLE_MODULES = YES

// Strict Prototypes
//
// Warn about non-prototype declarations.

CLANG_WARN_STRICT_PROTOTYPES = NO

// Code Signing Style
//
// This setting specifies the method used to acquire and locate signing assets. Choose
// `Automatic` to let Xcode automatically create and update profiles, app IDs, and
// certificates. Choose `Manual` to create and update these yourself on the developer
// website.

CODE_SIGN_STYLE = Manual

// Strip Debug Symbols During Copy
//
// Specifies whether binary files that are copied during the build, such as in a Copy
// Bundle Resources or Copy Files build phase, should be stripped of debugging symbols.
// It does not cause the linked product of a target to be strippedâ€”use
// `STRIP_INSTALLED_PRODUCT` for that.

COPY_PHASE_STRIP = NO

// Defines Module
//
// If enabled, the product will be treated as defining its own module. This enables
// automatic production of LLVM module map files when appropriate, and allows the product
// to be imported as a module.

DEFINES_MODULE = YES

// Enable Bitcode
//
// Activating this setting indicates that the target or project should generate bitcode
// during compilation for platforms and architectures that support it. For Archive
// builds, bitcode will be generated in the linked binary for submission to the App
// Store. For other builds, the compiler and linker will check whether the code complies
// with the requirements for bitcode generation, but will not generate actual bitcode.

ENABLE_BITCODE = NO

// Framework Search Paths
//
// This is a list of paths to folders containing frameworks to be searched by the
// compiler for both included or imported header files when compiling C, Objective-C,
// C++, or Objective-C++, and by the linker for frameworks used by the product. Paths are
// delimited by whitespace, so any paths with spaces in them must be properly quoted.

FRAMEWORK_SEARCH_PATHS = $(inherited) $(PROJECT_DIR)

// Precompile Prefix Header
//
// Generates a precompiled header for the prefix header, which should reduce overall
// build times.
//
// Precompiling the prefix header will be most effective if the contents of the prefix
// header or any file it includes change rarely. If the contents of the prefix header or
// any file it includes change frequently, there may be a negative impact to overall
// build time.

GCC_PRECOMPILE_PREFIX_HEADER = YES

// Prefix Header
//
// Implicitly include the named header. The path given should either be a project
// relative path or an absolute path.

GCC_PREFIX_HEADER = Simplenote/Simplenote-Prefix.pch

// Info.plist File
//
// The project-relative path to the property list file that contains the `Info.plist`
// information used by bundles. For details on information property list files, see
// [Information Property List
// Files](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPRuntimeConfig/Articles/ConfigFiles.html#//apple_ref/doc/uid/20002091-CJBJIEDH)
// in [Runtime Configuration
// Guidelines](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPRuntimeConfig/000-Introduction/introduction.html).

INFOPLIST_FILE = Simplenote/Simplenote-Info.plist

// iOS Deployment Target
//
// Code will load on this and later versions of iOS. Framework APIs that are unavailable
// in earlier versions will be weak-linked; your code should check for null function
// pointers or specific system versions before calling newer APIs.

IPHONEOS_DEPLOYMENT_TARGET = 12.0

// Runpath Search Paths
//
// This is a list of paths to be added to the `runpath` search path list for the image
// being created. At runtime, `dyld` uses the `runpath` when searching for dylibs whose
// load path begins with `@rpath/`. See [Dynamic Library Programming
// Topics](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/000-Introduction/Introduction.html).

LD_RUNPATH_SEARCH_PATHS = $(inherited) @executable_path/Frameworks

// Library Search Paths
//
// This is a list of paths to folders to be searched by the linker for libraries used by
// the product. Paths are delimited by whitespace, so any paths with spaces in them need
// to be properly quoted.

LIBRARY_SEARCH_PATHS = $(inherited)

// Other C Flags
//
// Space-separated list of additional flags to pass to the compiler for C and Objective-C
// files. Be sure to backslash-escape any arguments that contain spaces or special
// characters, such as path names that may contain spaces. Use this setting if Xcode does
// not already provide UI for a particular C or Objective-C compiler flag.

OTHER_CFLAGS = $(inherited)

// Other Linker Flags
//
// Options defined in this setting are passed to invocations of the linker.

OTHER_LDFLAGS = -ObjC $(inherited)

// Product Name
//
// This is the basename of the product generated by the target.

PRODUCT_NAME = Simplenote

PROVISIONING_PROFILE =

// Objective-C Bridging Header
//
// Path to the header defining the Objective-C interfaces to be exposed in Swift.

SWIFT_OBJC_BRIDGING_HEADER = Simplenote/Simplenote-Bridging-Header.h

// Swift Language Version
//
//

SWIFT_VERSION = 5.0

// Wrapper Extension
//
// The extension used for product wrappers, which has a default value based on the
// product type.

WRAPPER_EXTENSION = app
